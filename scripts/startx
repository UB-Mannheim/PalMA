#!/bin/bash

# Start X server, window manager and other software for PalMA.

# Copyright (C) 2014 Universitätsbibliothek Mannheim
# See file LICENSE for license details.

# After the X server, the window manager is started.
# Then a background image is loaded and DPMS and screensaver are disabled.
# Now the PalMA state machine can run.

# Enable more log messages.
set -x

# Set session timeout parameter (minutes).
TIMEOUT=15

# User which is used for the PalMA desktop.
user=www-data

function palma_monitor()
{
    HTTPGET="wget -q -O-"
    payload="bash_startx: $@"
    $HTTPGET "$monitor_url/$(hostname -f)/$(base64<<<$payload)"
}

function set_pci_powerstate()
{
    syspath=/sys/bus/pci/devices/$1/power/control
    [ -w $syspath ] && echo auto > $syspath
}

# Power saving recommendations from powertop.
if test -w /proc/sys/vm/dirty_writeback_centisecs; then
    echo 1500 > /proc/sys/vm/dirty_writeback_centisecs
fi
if test -w /proc/sys/kernel/nmi_watchdog; then
    # Disable NMI watchdog for AMD /Intel hosts.
    echo 0 >/proc/sys/kernel/nmi_watchdog
fi
if test -w /sys/module/snd_hda_intel/parameters/power_save; then
    # Enable power save mode for Intel HDA sound.
    echo 1 >/sys/module/snd_hda_intel/parameters/power_save
fi
if test -d /sys/bus/pci; then
    # VGA compatible controller.
    set_pci_powerstate 0000:00:02.0
    # USB controller.
    set_pci_powerstate 0000:00:14.0
    # USB controller.
    set_pci_powerstate 0000:00:1a.0
    # Audio device.
    set_pci_powerstate 0000:00:1b.0
    # USB controller.
    set_pci_powerstate 0000:00:1d.0
fi

bindir=$(dirname "$0")
bindir=$(cd "$bindir" && pwd)
basedir=$(dirname "$bindir")

cd "$basedir"

inifile="$basedir/palma.ini"

if ! test -r "$inifile"; then
    inifile=/etc/palma.ini
    basedir=/usr/share/palma
fi

if ! test -r "$inifile"; then
    echo "Could not open $inifile, exiting"
    exit 1
fi

dbfile=palma.db
if test -d /var/lib/palma; then
    dbfile=/var/lib/palma/palma.db
fi

wwwroot=/var/www/html
if test -d /usr/share/palma; then
    wwwroot=/usr/share/palma
fi

rundir=/var/run/palma
mkdir -p $rundir
chown $user $rundir

# Get some configuration parameters from ini file.
export DISPLAY
eval $(grep -v '^\[\|^[[:space:]]*;\|^[[:space:]]*$' $inifile)
[ -z "$DISPLAY" ]       && DISPLAY=:1
[ -z "$start_url" ]     && start_url="http://$(hostname -f)/"
[ -z "$theme" ]         && theme="demo/simple"
[ -n "$browser" ] && export browser

background="${start_url}theme/${theme}/background.png"
screensaver="${start_url}theme/${theme}/screensaver.php"

if [ -z "$monitor_url" ]; then
    # noop
    monitor=:
else
    monitor=palma_monitor
fi

if test -z "$HOME"; then
export HOME=/root
fi

runx() {
    # Run a shell command as a user without root privileges.
    su -c "$@" -s /bin/bash $user
}

# Get HOME directory of $user.
userhome=$(su -c pwd -s /bin/sh -l "$user")

$monitor "starting up X server"

# Allow X server on display :0 to start.
/bin/sleep 5

# Start X server.
/usr/bin/Xorg "$DISPLAY" -verbose 0 -nolisten tcp vt8 >/dev/null 2>&1 &

# Allow X server to start before continuing.
/bin/sleep 5

# Start X window manager.
runx "/usr/bin/openbox --config-file \"$basedir/settings/openbox/rc.xml\"" &

# Allow window manager to start.
/bin/sleep 5

# Show background image.
runx "/usr/bin/feh --bg-scale --no-fehbg \"$background\"" >/dev/null 2>&1

# Disable DPMS.
runx "/usr/bin/xset -dpms"

# Disable screensaver.
runx "/usr/bin/xset s off"

[ -x /usr/bin/unclutter ] && runx "/usr/bin/unclutter -root -idle 0" &

# Show the DPMS and screensaver settings.
# /usr/bin/xset q

# Wait a littĺe before the screensaver image hides the background.
/bin/sleep 5

rm -f "$dbfile"

# Create directory for application settings if needed.
mkdir -p "$userhome/.config"

# Fix ownership of directory for application settings.
chown -R "$user:$user" "$userhome/.config"

# Create cache directory for openbox
mkdir -p "$userhome/.cache"
chown -R "$user:$user" "$userhome/.cache"

# Make sure webserver is accessible
i="0"
webserver_up=false;
while [ $i -lt 5 ]; do
    wget http://localhost -O /dev/null 2>/dev/null
    if [ $? = 0 ]; then
        webserver_up=true;
        break
    fi
    i=$((i+1))
    sleep 2
done

if [ "$webserver_up" = false ] ; then
    echo 'Error: Could not access http://localhost - please make sure the webserver is running.'
fi

# 0=initial state
# 1=screen saver running
# 2=vnc viewer running
state=0

# Disable too many log messages while running in loop.
set +x

while true; do

    if test -f "$dbfile"; then
        usercount=$(sqlite3 "$dbfile" "select count(*) from user")
    else
        usercount=0
    fi
    if test -z "$user"; then
        # sqlite3 failed - maybe the database table was locked.
        date +"%F %T database was locked, will retry later"
    elif test "$state" = "0"; then
        $monitor "starting login screen"
        # Initial state. Start a webbrowser with the screensaver image.
        # Kill the VNC viewer if it was running.
        date +"%F %T start palma-browser with screensaver"
        killall -q ssvncviewer
        runx "/usr/bin/php $wwwroot/do_logout_all.php"
        runx "$bindir/palma-browser $screensaver" &
        # switch to fullscreen
        for try in {1..10}; do
            sleep 5
            if test "$(/usr/bin/wmctrl -l | wc -l)" = "1"; then
                date +"%F %T screensaver running, making fullscreen"
                runx "/usr/bin/wmctrl -r :ACTIVE: -b toggle,fullscreen"
                state="1"
                break
            fi
        done
        if test "$(/usr/bin/wmctrl -l | wc -l)" != "1"; then date +"%F %T no screenaver found after $try attempts!"; fi
    elif test "$state" = "1"; then
        # Screen saver is running. Wait for the first user connection.
        if test "$usercount" = '0'; then
            :
            # There is still no user connected.
            # The screensaver should be running. If not: restart it.
            if ! pgrep palma-browser >/dev/null; then
                $monitor "palma-browser was killed, restarting"
                # Webbrowser was killed (software bug). Restart it.
                date +"%F %T palma-browser was killed"
                state="0"
                continue
            fi
        else
            $monitor "connecting first user, starting SSVNCDaemon"
            # First user connected. Terminate the screensaver.
            # Start the VNC viewer process, so usercount can share their desktop.
            date +"%F %T kill palma-browser"
            kill $(pgrep palma-browser)
            runx "/usr/bin/php $wwwroot/start_ssvnc.php" &
            runx "/usr/bin/touch $rundir/last_activity"
            state="2"
        fi
    elif test "$state" = "2"; then
        # Users are connected. The VNC viewer process is running.
        if test "$usercount" = '0'; then
            $monitor "last user disconnected, restarting"
            # The last user disconnected. Start the screensaver.
            date +"%F %T last user disconnected"
            state="0"
            continue
        else
            ACTIVITY=$(date -r $rundir/last_activity '+%s')
            NOW=$(date '+%s')
            DIFF=$((NOW - ACTIVITY))
            if test $((DIFF / 60)) -ge "$TIMEOUT"; then
                $monitor "timeout reached, restarting"
                # Users are still connected but for some time no longer active.
                # Force initial state.
                date +"%F %T inactivity timeout"
                state="0"
                continue
            fi
        fi
    fi
    sleep 5
done
