#!/bin/sh

# Start X server, window manager and other software for PalMA.

# Copyright (C) 2014 Universitätsbibliothek Mannheim
# See file LICENSE for license details.

# After the X server, the window manager is started.
# Then a background image is loaded and DPMS and screensaver are disabled.
# Now the PalMA state machine can run.

# Enable more log messages.
set -x

# Set session timeout parameter (minutes).
TIMEOUT=15

# User which is used for the PalMA desktop.
user=www-data

# Power saving recommendations from powertop.

echo 1500 >/proc/sys/vm/dirty_writeback_centisecs
if test -f /proc/sys/kernel/nmi_watchdog; then
    # Disable NMI watchdog for AMD /Intel hosts.
    echo 0 >/proc/sys/kernel/nmi_watchdog
fi
if test -f /sys/module/snd_hda_intel/parameters/power_save; then
    # Enable power save mode for Intel HDA sound.
    echo 1 >/sys/module/snd_hda_intel/parameters/power_save
fi
if test -d /sys/bus/pci; then
    # VGA compatible controller.
    echo auto >/sys/bus/pci/devices/0000:00:02.0/power/control
    # USB controller.
    echo auto >/sys/bus/pci/devices/0000:00:14.0/power/control
    # USB controller.
    echo auto >/sys/bus/pci/devices/0000:00:1a.0/power/control
    # Audio device.
    echo auto >/sys/bus/pci/devices/0000:00:1b.0/power/control
    # USB controller.
    echo auto >/sys/bus/pci/devices/0000:00:1d.0/power/control
fi

basedir=$(dirname "$0")
basedir=$(cd "$basedir" && cd .. && pwd)

cd "$basedir"

inifile="$basedir/palma.ini"

# Get some configuration parameters from ini file.
export DISPLAY
DISPLAY=$(grep "^id[ ]*=" "$inifile"|perl -pe 's/^[^=]*=[ ]*["]?([^"]*)["]?/\1/')
start_url=$(grep "^start_url[ ]*=" "$inifile"|perl -pe 's/^[^=]*=[ ]*["]?([^"]*)["]?/\1/')
theme=$(grep "^theme[ ]*=" "$inifile"|perl -pe 's/^[^=]*=[ ]*["]?([^"]*)["]?/\1/')
background="${start_url}theme/${theme}/background.png"
screensaver="${start_url}theme/${theme}/screensaver.php"

if test -z "$HOME"; then
export HOME=/root
fi

runx() {
    # Run a shell command as a user without root privileges.
    su -c "$@" -s /bin/sh $user
}

# Get HOME directory of $user.
userhome=$(su -c pwd -s /bin/sh -l "$user")

# Allow X server on display :0 to start.
/bin/sleep 3

# Start X server.
/usr/bin/Xorg "$DISPLAY" -verbose 0 -nolisten tcp vt8 &

# Allow X server to start before continuing.
/bin/sleep 5

# Start X window manager.
runx "/usr/bin/openbox --config-file \"$basedir/settings/openbox/rc.xml\"" &

# Allow window manager to start.
/bin/sleep 2

# Show background image.
runx "/usr/bin/feh --bg-scale --no-fehbg \"$background\""

# Disable DPMS.
runx "/usr/bin/xset -dpms"

# Disable screensaver.
runx "/usr/bin/xset s off"

# Show the DPMS and screensaver settings.
# /usr/bin/xset q

# Wait a littĺe before the screensaver image hides the background.
/bin/sleep 2

rm palma.db

# Create directory for application settings if needed.
mkdir -p "$userhome/.config"

# Find a web browser which supports JavaScript.
# Run browser with PalMA compatible settings.
webbrowser=/bin/false
if test -f /usr/bin/midori; then
    webbrowser=midori
    rm -f "$userhome/.config/midori/config"
    cp "settings/midori/config" "$userhome/.config/midori/config"
# elif test -f /usr/bin/dwb; then
    # webbrowser=dwb
    # rm -rf "$userhome/.config/dwb"
    # cp -a settings/dwb "$userhome/.config"
fi

# Fix ownership of directory for application settings.
chown -R "$user:$user" "$userhome/.config"

# 0=initial state
# 1=screen saver running
# 2=vnc viewer running
state=0

# Disable too many log messages while running in loop.
set +x

while true; do

    if test -f palma.db; then
        usercount=$(sqlite3 palma.db "select count(*) from user")
    else
        usercount=0
    fi
    if test -z "$user"; then
        # sqlite3 failed - maybe the database table was locked.
        date +"%F %T database was locked, will retry later"
    elif test "$state" = "0"; then
        # Initial state. Start a webbrowser with the screensaver image.
        # Kill the VNC viewer if it was running.
        date +"%F %T start $webbrowser with screensaver"
        killall -q ssvncviewer
        runx "/usr/bin/php5 control.php doLogout=ALL"
        case $webbrowser in
            midori)
                runx "/usr/bin/$webbrowser -e Fullscreen -a \"$screensaver\"" &
                ;;
            dwb)
                runx "/usr/bin/$webbrowser --execute=presentation_mode \"$screensaver\"" &
                ;;
            *)
                runx "$webbrowser \"$screensaver\"" &
                ;;
        esac
        state="1"
    elif test "$state" = "1"; then
        # Screen saver is running. Wait for the first user connection.
        if test "$usercount" = '0'; then
            # There is still no user connected.
            # The screensaver should be running. If not: restart it.
            if ! pgrep "$webbrowser" >/dev/null; then
                # Webbrowser was killed (software bug). Restart it.
                date +"%F %T $webbrowser was killed"
                state="0"
                continue
            fi
        else
            # First user connected. Terminate the screensaver.
            # Start the VNC viewer process, so usercount can share their desktop.
            date +"%F %T kill $webbrowser"
            killall --user $user --quiet $webbrowser
            runx "/usr/bin/php5 SSVNCDaemon.php" &
            runx "/usr/bin/touch last_activity"
            state="2"
        fi
    elif test "$state" = "2"; then
        # Users are connected. The VNC viewer process is running.
        if test "$usercount" = '0'; then
            # The last user disconnected. Start the screensaver.
            date +"%F %T last user disconnected"
            state="0"
            continue
        else
            ACTIVITY=$(date -r last_activity '+%s')
            NOW=$(date '+%s')
            DIFF=$((NOW - ACTIVITY))
            if test $((DIFF / 60)) -ge "$TIMEOUT"; then
                # Users are still connected but for some time no longer active.
                # Force initial state.
                date +"%F %T inactivity timeout"
                state="0"
                continue
            fi
        fi
    fi
    sleep 5
done
